<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" dir="ltr" lang="en"><head>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
		<meta name="generator" content="MediaWiki 1.15.1">
		<meta name="keywords" content="SummerOfCodeIdeas,SoC Ideas Eclipse Plugin2011,SummerofCode2011 Timotei21,SoC Ideas LuaAI 2011,SummerOfCodeProposal 2011 LuaAI champ,SummerOfCodeProposal 2011 LuaAI JodyNorthup,SummerOfCodeProposal LuaAI Improvement Nephro,SoC Ideas Multiplayer Improvements 2011,SoC2011 Xenmen,Vjoe Multiplayer Reengineering,SoC Ideas Schema Validation2011">
		<link rel="shortcut icon" href="http://wiki.wesnoth.org/favicon.ico">
		<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.wesnoth.org/opensearch_desc.php" title="Wesnoth (en)">
		<link rel="alternate" type="application/rss+xml" title="Wesnoth RSS Feed" href="http://wiki.wesnoth.org/index.php?title=Special:RecentChanges&amp;feed=rss">
		<link rel="alternate" type="application/atom+xml" title="Wesnoth Atom Feed" href="http://wiki.wesnoth.org/index.php?title=Special:RecentChanges&amp;feed=atom">
<link rel="stylesheet" type="text/css" media="print" href="The%20Battle%20for%20Wesnoth_files/commonPrint.css">
<link rel="shortcut icon" type="image/png" href="http://wiki.wesnoth.org/skins/glamdrol/ico.png">

<style type="text/css" media="screen,projection">/*<![CDATA[*/ @import "/skins/glamdrol/main.css"; /*]]>*/</style>
<script type="text/javascript" src="The%20Battle%20for%20Wesnoth_files/index.php"></script><script type="text/javascript" src="The%20Battle%20for%20Wesnoth_files/wikibits.js"></script>

<title>SummerOfCodeIdeas - Wesnoth</title>

</head>


<body>

<div id="global">

<div id="header">
  <div id="logo">
    <a href="http://www.wesnoth.org/"><img alt="Wesnoth logo" src="The%20Battle%20for%20Wesnoth_files/wesnoth-logo.jpg"></a>
  </div>
</div>

<div id="nav">
  <ul>
    <li><a href="http://www.wesnoth.org/">Home</a></li>
    <li><a href="http://www.wesnoth.org/wiki/Play">Play</a></li>
    <li><a href="http://www.wesnoth.org/wiki/Create">Create</a></li>
    <li><a href="http://forums.wesnoth.org/">Forums</a></li>
    <li><a href="http://www.wesnoth.org/wiki/Support">Support</a></li>
    <li><a href="http://www.wesnoth.org/wiki/Project">Project</a></li>
    <li><a href="http://www.wesnoth.org/wiki/Credits">Credits</a></li>
    <li><a href="http://www.wesnoth.org/wiki/UsefulLinks">Links</a></li>
  </ul>
</div>

<div id="main">
<!-- Google AdSense -->
<script type="text/javascript"><!--
google_ad_client = "pub-0517361381516880";
/* 728x90, created 7/8/08 */
google_ad_slot = "2533616207";
google_ad_width = 728;
google_ad_height = 90;
google_color_border = "FFFFFF";
google_color_bg = "FFFBF7";
google_color_link = "0000FF";
google_color_text = "000000";
google_color_url = "008000";
//-->
</script>
<script type="text/javascript" src="The%20Battle%20for%20Wesnoth_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px"><ins id="aswift_0_anchor" style="display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px"><iframe allowtransparency="true" hspace="0" marginwidth="0" marginheight="0" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){i+='.call';setTimeout(h,0)}else if(h.match){i+='.nav';w.location.replace(h)}s.log&amp;&amp;s.log.push(i)}" vspace="0" id="aswift_0" name="aswift_0" style="left: 0pt; position: absolute; top: 0pt;" frameborder="0" height="90" scrolling="no" width="728"></iframe></ins></ins>

<!-- End Google AdSense -->

<div id="content">
  <a name="top" id="contentTop"></a>
    <h1 class="firstHeading">SummerOfCodeIdeas</h1>
  <div id="bodyContent">
    <h3 id="siteSub">From Wesnoth</h3>
    <div id="contentSub"></div>
        
    <!-- start wikipage -->
    <table align="center" border="3" cellpadding="20" cellspacing="0">
<tbody><tr>
<td align="center"> <b>This page is related to Summer of Code 2011</b>
</td></tr>
<tr>
<td align="center"> <strong class="selflink">See the list of Summer of Code 2011 Ideas</strong>
</td></tr></tbody></table>
<p><br>
</p><p><br>
</p>
<table id="toc" class="toc" summary="Contents"><tbody><tr><td><div id="toctitle"><h2>Contents</h2> <span class="toctoggle">[<a href="javascript:toggleToc()" class="internal" id="togglelink">hide</a>]</span></div>
<ul>
<li class="toclevel-1"><a href="#I_want_to_be_one_of_your_Google_Summer_of_Code_students.2C_what_should_I_do..."><span class="tocnumber">1</span> <span class="toctext">I want to be one of your Google Summer of Code students, what should I do...</span></a></li>
<li class="toclevel-1"><a href="#Information_about_our_Project"><span class="tocnumber">2</span> <span class="toctext">Information about our Project</span></a></li>
<li class="toclevel-1"><a href="#People_to_bug_on_IRC"><span class="tocnumber">3</span> <span class="toctext">People to bug on IRC</span></a></li>
<li class="toclevel-1"><a href="#List_of_Ideas_for_the_Project_.28Suggestions_from_wesnoth_developers.29"><span class="tocnumber">4</span> <span class="toctext">List of Ideas for the Project (Suggestions from wesnoth developers)</span></a>
<ul>
<li class="toclevel-2"><a href="#Enhance_.26_polish_the_Wesnoth_Eclipse_Plugin"><span class="tocnumber">4.1</span> <span class="toctext">Enhance &amp; polish the Wesnoth Eclipse Plugin</span></a>
<ul>
<li class="toclevel-3"><a href="#timotei_-_Improving_the_Eclipse_Plugin"><span class="tocnumber">4.1.1</span> <span class="toctext">timotei - Improving the Eclipse Plugin</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Extend_Wesnoth.27s_Lua_AI_support_and_improve_Wesnoth.27s_AI"><span class="tocnumber">4.2</span> <span class="toctext">Extend Wesnoth's Lua AI support and improve Wesnoth's AI</span></a>
<ul>
<li class="toclevel-3"><a href="#Qbunia_-_AI_implementation_guy"><span class="tocnumber">4.2.1</span> <span class="toctext">Qbunia - AI implementation guy</span></a></li>
<li class="toclevel-3"><a href="#champ_-_Implement_Multi-player_Lua_AI_scripting_security"><span class="tocnumber">4.2.2</span> <span class="toctext">champ - Implement Multi-player Lua AI scripting security</span></a></li>
<li class="toclevel-3"><a href="#Jody_Northup_-_Improve_and_extend_Lua_AI_scripting_facilities"><span class="tocnumber">4.2.3</span> <span class="toctext">Jody Northup - Improve and extend Lua AI scripting facilities</span></a></li>
<li class="toclevel-3"><a href="#Nephro_-_Improving_and_extending_LuaAI"><span class="tocnumber">4.2.4</span> <span class="toctext">Nephro - Improving and extending LuaAI</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Reengineer_Wesnoth.27s_multiplayer_engine"><span class="tocnumber">4.3</span> <span class="toctext">Reengineer Wesnoth's multiplayer engine</span></a>
<ul>
<li class="toclevel-3"><a href="#Daniel_Tadeuszow_-_Practical_Multiplayer"><span class="tocnumber">4.3.1</span> <span class="toctext">Daniel Tadeuszow - Practical Multiplayer</span></a>
<ul>
<li class="toclevel-4"><a href="#vjoe_-_Multiplayer_Reengineering"><span class="tocnumber">4.3.1.1</span> <span class="toctext">vjoe - Multiplayer Reengineering</span></a></li>
<li class="toclevel-4"><a href="#Zaroth_-_Multiplayer_Improvements"><span class="tocnumber">4.3.1.2</span> <span class="toctext">Zaroth - Multiplayer Improvements</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-2"><a href="#Add_WML_Schema_Validation_to_Wesnoth"><span class="tocnumber">4.4</span> <span class="toctext">Add WML Schema Validation to Wesnoth</span></a>
<ul>
<li class="toclevel-3"><a href="#Sytyi_-_WML_Validator"><span class="tocnumber">4.4.1</span> <span class="toctext">Sytyi - WML Validator</span></a></li>
<li class="toclevel-3"><a href="#GrigoryJ_-_WML_schema"><span class="tocnumber">4.4.2</span> <span class="toctext">GrigoryJ - WML schema</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Create_a_simple_content_manager_frontend_for_non-technical_users"><span class="tocnumber">4.5</span> <span class="toctext">Create a simple content manager frontend for non-technical users</span></a>
<ul>
<li class="toclevel-3"><a href="#Disruption_-_Simple_Content_Manager"><span class="tocnumber">4.5.1</span> <span class="toctext">Disruption - Simple Content Manager</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Allow_wesnoth_to_support_spritesheets"><span class="tocnumber">4.6</span> <span class="toctext">Allow wesnoth to support spritesheets</span></a>
<ul>
<li class="toclevel-3"><a href="#Karol_Kozub_-_Spritesheets"><span class="tocnumber">4.6.1</span> <span class="toctext">Karol Kozub - Spritesheets</span></a></li>
<li class="toclevel-3"><a href="#Jacob_Regan_-_Consolidation_of_.PNG.27s_into_Sprite_Sheets"><span class="tocnumber">4.6.2</span> <span class="toctext">Jacob Regan - Consolidation of .PNG's into Sprite Sheets</span></a></li>
<li class="toclevel-3"><a href="#Arthur_Wulf_-_Spritesheets"><span class="tocnumber">4.6.3</span> <span class="toctext">Arthur Wulf - Spritesheets</span></a></li>
<li class="toclevel-3"><a href="#Tom_Hadley_-_Sprite_Sheet_Creation.2FImplementation"><span class="tocnumber">4.6.4</span> <span class="toctext">Tom Hadley - Sprite Sheet Creation/Implementation</span></a></li>
<li class="toclevel-3"><a href="#Nicolas_P.C3.A9pin-Perreault_-_Spritesheet_Implementation"><span class="tocnumber">4.6.5</span> <span class="toctext">Nicolas PÃ©pin-Perreault - Spritesheet Implementation</span></a></li>
<li class="toclevel-3"><a href="#Sajal-_Implementation_of_images_using_spritesheets"><span class="tocnumber">4.6.6</span> <span class="toctext">Sajal- Implementation of images using spritesheets</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Improve_Wesnoth.27s_Whiteboard"><span class="tocnumber">4.7</span> <span class="toctext">Improve Wesnoth's Whiteboard</span></a>
<ul>
<li class="toclevel-3"><a href="#Tommy_Schmitz_-_Whiteboard_Improvements"><span class="tocnumber">4.7.1</span> <span class="toctext">Tommy Schmitz - Whiteboard Improvements</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Make_your_own_ideas"><span class="tocnumber">4.8</span> <span class="toctext">Make your own ideas</span></a>
<ul>
<li class="toclevel-3"><a href="#Mark_Goodenough_-_Improvements_to_the_Lua_AI"><span class="tocnumber">4.8.1</span> <span class="toctext">Mark Goodenough - Improvements to the Lua AI</span></a></li>
<li class="toclevel-3"><a href="#Michael_Babich_-_Improving_Lua_Add-ons.27_Abilities_in_Interfaces"><span class="tocnumber">4.8.2</span> <span class="toctext">Michael Babich - Improving Lua Add-ons' Abilities in Interfaces</span></a></li>
<li class="toclevel-3"><a href="#Kornel_Kisielewicz_-_pure_Lua-based_scenario_definition"><span class="tocnumber">4.8.3</span> <span class="toctext">Kornel Kisielewicz - pure Lua-based scenario definition</span></a></li>
<li class="toclevel-3"><a href="#SteveGSoC_-_Project_description"><span class="tocnumber">4.8.4</span> <span class="toctext">SteveGSoC - Project description</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1"><a href="#Student_proposals_not_submitted_to_google"><span class="tocnumber">5</span> <span class="toctext">Student proposals not submitted to google</span></a></li>
</ul>
</td></tr></tbody></table><script type="text/javascript"> if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </script>
<a name="I_want_to_be_one_of_your_Google_Summer_of_Code_students.2C_what_should_I_do..." id="I_want_to_be_one_of_your_Google_Summer_of_Code_students.2C_what_should_I_do..."></a><h1> <span class="mw-headline"> I want to be one of your Google Summer of Code students, what should I do... </span></h1>
<p>Here is a quick list of things to do at this time:
</p>
<ul><li> <b>MOST IMPORTANT</b> Submit your application to Google till April 8th.
</li><li> <b>MOST IMPORTANT</b> Join the irc channel (#wesnoth-dev on 
irc.freenode.net) and talk about your project and your appilication. We 
will not give formal interviews, but we will clearly favor people we 
have learned to know during the selection process (basically 
communication via IRC is mandatory for our project! it is the main way 
of "every day communication" for Wesnoth. For the same reason, it's also
 a good idea to regularly read the <a href="http://www.wesnoth.org/irclogs/2011/" class="external text" title="http://www.wesnoth.org/irclogs/2011/" rel="nofollow">IRC logs</a>.).
</li></ul>
<ul><li> <b>VERY IMPORTANT</b> Update the wiki page about your idea (Make a copy of the student proposal page template: <a href="http://wiki.wesnoth.org/SoC2011_Template_of_Student_page" title="SoC2011 Template of Student page">SoC2011_Template_of_Student_page</a>):
<ul><li> Fill the questionnaire.
</li><li> Detail your idea as much as possible, look at other students 
pages, and please give timeline, milestones and studies you've done
</li></ul>
</li><li> If you haven't done so yet, create an account on gna.org (required for committing later on)
</li><li> If you haven't done so yet, create an account on the wesnoth 
forum, and tell an admin of the forum or leader of the group on the IRC 
channel to mark it as a GSoC Student account (admins/group leaders are: 
Boucman, Crab, fendrin/Fabi, Ivanovic, Mordante/SkeletonCrew, Noy, 
shadowmaster, Sirp/Dave, Soliton)
</li><li> Though not mandatory, it is highly advisable to go to the <a href="http://wiki.wesnoth.org/EasyCoding" title="EasyCoding">EasyCoding</a> and <a href="http://wiki.wesnoth.org/NotSoEasyCoding" title="NotSoEasyCoding">NotSoEasyCoding</a>
 pages and implement one of these ideas (or any idea of similar scope) 
so we have an idea how you work. Be sure to use your gna account when 
submitting these patches so we know who it is coming from. You can also 
implement some features from our feature request database at gna. When 
you implement something, also list it on your own page with a reference 
to the patch. This should give you a good idea what the Wesnoth 
sourcecode is like and will provide a good start to getting used to our 
coding style, too. You can also start working on your project and submit
 patches/prototypes related to it
</li></ul>
<ul><li> For working on Wesnoth you have to be able to compile trunk. To do so you should have a look at the <a href="http://wiki.wesnoth.org/WesnothSVN" title="WesnothSVN">page about svn</a> and afterwards <a href="http://wiki.wesnoth.org/CompilingWesnoth" title="CompilingWesnoth">compile Wesnoth svn</a>.
</li></ul>
<a name="Information_about_our_Project" id="Information_about_our_Project"></a><h1> <span class="mw-headline"> Information about our Project </span></h1>
<p>The information we provided google with about our project can be looked up at the site <a href="http://wiki.wesnoth.org/SoC_Information_for_Google" title="SoC Information for Google">SoC Information for Google</a>.
</p><p>Also see the <a href="http://wiki.wesnoth.org/DeveloperResources" title="DeveloperResources" class="mw-redirect">DeveloperResources</a> link (from the <a href="http://wiki.wesnoth.org/Project" title="Project">Project</a> page).
</p>
<a name="People_to_bug_on_IRC" id="People_to_bug_on_IRC"></a><h1> <span class="mw-headline"> People to bug on IRC </span></h1>
<p>We have prepared a list of people with their "area of competence". 
This is to give you an idea on which areas those people can be of help 
for you. Of course you should always just ask in the IRC chan, but those
 are the most likely ones to answer questions in the respective area. 
And here is the list:
</p><p><a href="http://wiki.wesnoth.org/SoC_People_to_bug_on_IRC" title="SoC People to bug on IRC">SoC People to bug on IRC</a>
</p>
<a name="List_of_Ideas_for_the_Project_.28Suggestions_from_wesnoth_developers.29" id="List_of_Ideas_for_the_Project_.28Suggestions_from_wesnoth_developers.29"></a><h1> <span class="mw-headline"> List of Ideas for the Project (Suggestions from wesnoth developers) </span></h1>
<table border="1">
<tbody><tr>
<td> NOTE: this list of ideas is automatically generated from the 'description' section of pages in <i>Summer of Code 2011 Idea</i> category. DO NOT TRY TO EDIT THIS LIST BY HAND - IT WON'T WORK. INSTEAD, CREATE A NEW PAGE WITH THE following template: <a href="http://wiki.wesnoth.org/SoC_Ideas2011_Template" title="SoC Ideas2011 Template">SoC_Ideas2011_Template</a>.
</td></tr>
<tr>
<td> NOTE: to add a student page, create a new page based on copy the student proposal page template: <a href="http://wiki.wesnoth.org/SoC2011_Template_of_Student_page" title="SoC2011 Template of Student page">SoC2011_Template_of_Student_page</a>):
</td></tr></tbody></table>
<p><br>
</p>
<a name="Enhance_.26_polish_the_Wesnoth_Eclipse_Plugin" id="Enhance_.26_polish_the_Wesnoth_Eclipse_Plugin"></a><h2> <span class="mw-headline">Enhance &amp; polish the Wesnoth Eclipse Plugin</span></h2>
<p>More info at <a href="http://wiki.wesnoth.org/SoC_Ideas_Eclipse_Plugin2011" title="SoC Ideas Eclipse Plugin2011">SoC_Ideas_Eclipse_Plugin2011</a>
</p><p>A java-based Eclipse plugin was created in 2010 to allow easier 
creation and modification of User-Made Content for Wesnoth. You should 
extend this work and polish existing features in terms of usability and 
performance, and add new features.
</p><p><i>There is 1 submitted student proposal for this idea</i>
</p>
<a name="timotei_-_Improving_the_Eclipse_Plugin" id="timotei_-_Improving_the_Eclipse_Plugin"></a><h4> <span class="mw-headline">timotei - Improving the Eclipse Plugin</span></h4>
<p>I aim at improving the plugin, so it will become the tool used by all
 UMC Authors. That is, UMC Authors will get rid of the lot of different 
tools they use for different task, and instead use one single unified 
Tool that will speed up the development.
<br>See <a href="http://wiki.wesnoth.org/SummerofCode2011_Timotei21" title="SummerofCode2011 Timotei21">SummerofCode2011 Timotei21</a> for more information.<br><br>
<br>
</p>
<a name="Extend_Wesnoth.27s_Lua_AI_support_and_improve_Wesnoth.27s_AI" id="Extend_Wesnoth.27s_Lua_AI_support_and_improve_Wesnoth.27s_AI"></a><h2> <span class="mw-headline">Extend Wesnoth's Lua AI support and improve Wesnoth's AI</span></h2>
<p>More info at <a href="http://wiki.wesnoth.org/SoC_Ideas_LuaAI_2011" title="SoC Ideas LuaAI 2011">SoC_Ideas_LuaAI_2011</a>
</p><p>It is very important for Wesnoth to have a way of scripting AI 
without modifying the c++ source code. Some time ago, it was possible to
 use Python to code AIs, but it was removed due to security issues. Now,
 we have added Lua as a new way to script AI. The  core capabilities 
were already added, but we need to integrate Lua AI scripts better.
</p><p>Wesnoth AI consists of different components. Each component is a 
c++ object, which provides an interface to allow the ai to delegate part
 of the turn sequence to that c++ object. But, that c++ object can be a 
proxy for code written in different language, such as formula_ai or lua.
 So, we have a lua engine - a c++ class which is responsible with 
creating c++ proxies for lua code snippets. This lua engine must provide
 access to all the information that the c++ AI knows - caches like 
'attacks' and 'possible moves', values of aspects such as 'aggression' 
and 'caution', etc. So, there's a large number of AI support functions 
which we need to expose to lua code.
</p><p><i>There are 5 submitted student proposals for this idea</i><br>See <a href="http://wiki.wesnoth.org/User:Champ/Questionaire" title="User:Champ/Questionaire">Champ/Questionaire</a> for more information.<br><br>
</p>
<a name="Qbunia_-_AI_implementation_guy" id="Qbunia_-_AI_implementation_guy"></a><h4> <span class="mw-headline">Qbunia - AI implementation guy</span></h4>Hi
 my name is Jakub Ozga. I like to work on Ai exposing from c++ to lua. 
First of all i will do pregsoc work to get know which parts of AI are 
missing. Then I would do through plan which is written here <a href="http://wiki.wesnoth.org/SummerOfCodeIdeas#Extend_Wesnoth.27s_Lua_AI_support_and_improve_Wesnoth.27s_AI" class="external autonumber" title="http://wiki.wesnoth.org/SummerOfCodeIdeas#Extend_Wesnoth.27s_Lua_AI_support_and_improve_Wesnoth.27s_AI" rel="nofollow">[1]</a>.
<p><br>See <a href="http://wiki.wesnoth.org/User:Qboo" title="User:Qboo">Qboo</a> for more information.<br><br>
</p>
<a name="champ_-_Implement_Multi-player_Lua_AI_scripting_security" id="champ_-_Implement_Multi-player_Lua_AI_scripting_security"></a><h4> <span class="mw-headline">champ - Implement Multi-player Lua AI scripting security</span></h4>
<p>I plan to implement a secure mechanism on Lua AI scripting system.<br>
The mechanism will be implement on C++ level and transparent to Lua AI scripts.<br>
Make player-unaccessible resource also unaccessible for Lua AI scripts. 
(For example: If fog is on, units covered by fog for current player 
should not accessible to Lua scripts initiated by current player.)<br>
Make player-read-only resource also read-only for Lua AI scripts. (For 
example: Lua scripts should be able to access the coordinate for a 
player-owned unit, but should not be able to modify it directly.)<br>
<br>See <a href="http://wiki.wesnoth.org/SummerOfCodeProposal_2011_LuaAI_champ" title="SummerOfCodeProposal 2011 LuaAI champ">SummerOfCodeProposal 2011 LuaAI champ</a> for more information.<br><br>
</p>
<a name="Jody_Northup_-_Improve_and_extend_Lua_AI_scripting_facilities" id="Jody_Northup_-_Improve_and_extend_Lua_AI_scripting_facilities"></a><h4> <span class="mw-headline">Jody Northup - Improve and extend Lua AI scripting facilities</span></h4>
<p>This is the <a href="http://wiki.wesnoth.org/SoC_Ideas_LuaAI_2011" title="SoC Ideas LuaAI 2011">Lua AI improvement</a> idea.<br>
If I am accepted for this project, I will bring the Lua AI scripting 
functionality up to par with the current C++ AI programming 
functionality by first exposing all of the C++ AI support functions to 
Wesnoth's Lua API, and then adding WML utilities to include and handle 
custom Lua AI code in WML modules.<br>
I expect the first step to involve an in-depth analysis of the C++ AI 
functions and an inventory of the gaps in the currently-implemented Lua 
AI API, followed by tedious Lua API programming to expose each of those 
functions. I expect that the second step will involve communication with
 the development community to determine good WML specifications for the 
use of Lua AI code in UMC modules.
<br>See <a href="http://wiki.wesnoth.org/SummerOfCodeProposal_2011_LuaAI_JodyNorthup" title="SummerOfCodeProposal 2011 LuaAI JodyNorthup">SummerOfCodeProposal 2011 LuaAI JodyNorthup</a> for more information.<br><br>
</p>
<a name="Nephro_-_Improving_and_extending_LuaAI" id="Nephro_-_Improving_and_extending_LuaAI"></a><h4> <span class="mw-headline">Nephro - Improving and extending LuaAI</span></h4>
<p>The artificial intelligence module of Battle for Wesnoth is written 
in C++ and is pretty complicated for scenario developers to configure. 
That's why Wesnoth developers decided to extend it and allow users to 
write AI configurations in Lua, which is not possible at the moment.
<br>See <a href="http://wiki.wesnoth.org/SummerOfCodeProposal_LuaAI_Improvement_Nephro" title="SummerOfCodeProposal LuaAI Improvement Nephro">SummerOfCodeProposal LuaAI Improvement Nephro</a> for more information.<br><br>
<br>
</p>
<a name="Reengineer_Wesnoth.27s_multiplayer_engine" id="Reengineer_Wesnoth.27s_multiplayer_engine"></a><h2> <span class="mw-headline">Reengineer Wesnoth's multiplayer engine</span></h2>
<p>More info at <a href="http://wiki.wesnoth.org/SoC_Ideas_Multiplayer_Improvements_2011" title="SoC Ideas Multiplayer Improvements 2011">SoC_Ideas_Multiplayer_Improvements_2011</a>
</p><p><br>
Wesnoth includes a lot of multiplayer content, like 'standard' 
scenarios, custom scenarios and multiplayer campaigns. However, when 
creating a multiplayer game, the player's options are highly limited - 
for example, it is not possible to select the difficulty level before 
starting the scenario, and it is not possible to allow the scenario to 
set what 'variables' can be customized by players before game is started
 (there's only global 'use map settings' flag and some control over 
sides). We want to reengineer the architecture of Wesnoth's multiplayer 
engine to allow it to support those things.
</p><p><i>There are 3 submitted student proposals for this idea</i>
</p>
<a name="Daniel_Tadeuszow_-_Practical_Multiplayer" id="Daniel_Tadeuszow_-_Practical_Multiplayer"></a><h3> <span class="mw-headline">Daniel Tadeuszow - Practical Multiplayer </span></h3>
<p>In singleplayer and multiplayer (prior to opening a lobby) a 
difficulty level is chosen and passed to the parser, which then runs 
through the WML. Depending on the difficulty level, certain values are 
chosen for various variables. HOWEVER, there is no limit on what can be 
specified. Many map-specific values (like unit starting positions and 
in-game text) can even be changed.
</p><p>(It should be noted that even the available difficulty levels are specified IN the WML code for each campaign.)
</p><p><br>
My general solution is to have the parser cache all values regardless of
 difficulty level. In singleplayer, this will be done in the background 
after selecting a campaign (while displaying the 'difficulty select' 
screen), and in multiplayer the parsing will be done upon joining a 
lobby.
<br>See <a href="http://wiki.wesnoth.org/SoC2011_Xenmen" title="SoC2011 Xenmen">SoC2011 Xenmen</a> for more information.<br><br>
</p>
<a name="vjoe_-_Multiplayer_Reengineering" id="vjoe_-_Multiplayer_Reengineering"></a><h4> <span class="mw-headline">vjoe - Multiplayer Reengineering</span></h4>
<p>The aim of this project is to unify the single and multiplayer modes 
with the intend of making the game engine more modular, more efficient 
and easier to extend.
<br>See <a href="http://wiki.wesnoth.org/Vjoe_Multiplayer_Reengineering" title="Vjoe Multiplayer Reengineering">Vjoe Multiplayer Reengineering</a> for more information.<br><br>
</p>
<a name="Zaroth_-_Multiplayer_Improvements" id="Zaroth_-_Multiplayer_Improvements"></a><h4> <span class="mw-headline">Zaroth - Multiplayer Improvements</span></h4>
<p>Since the idea with Simple content manager may turn out to be <a href="http://wiki.wesnoth.org/Zaroth_Simple_Content_Manager#ATTENTION" class="external text" title="http://wiki.wesnoth.org/Zaroth_Simple_Content_Manager#ATTENTION" rel="nofollow">redundant</a>, I turned my attention to <a href="http://wiki.wesnoth.org/SoC_Ideas_Multiplayer_Improvements_2011" title="SoC Ideas Multiplayer Improvements 2011">SoC_Ideas_Multiplayer_Improvements_2011</a>. This is a bunch of smaller projects with the common theme of improving multiplayer rather than one big project.
</p><p>Description of my vision of these improvements can be found here: <a href="http://wiki.wesnoth.org/Zaroth_Multiplayer_Improvements" title="Zaroth Multiplayer Improvements">Zaroth Multiplayer Improvements</a>
<br>See <a href="http://wiki.wesnoth.org/User:Zaroth" title="User:Zaroth">Zaroth</a> for more information.<br><br>
<br>
</p>
<a name="Add_WML_Schema_Validation_to_Wesnoth" id="Add_WML_Schema_Validation_to_Wesnoth"></a><h2> <span class="mw-headline">Add WML Schema Validation to Wesnoth</span></h2>
<p>More info at <a href="http://wiki.wesnoth.org/SoC_Ideas_Schema_Validation2011" title="SoC Ideas Schema Validation2011">SoC_Ideas_Schema_Validation2011</a>
</p><p>Wesnoth supports a special language called WML ('Wesnoth markup 
language' ). To make it easier to check if a WML is correct, we want to 
add the support for WML schemas (descriptions of all possible tags and 
elements and a way to check if given WML file is correct according to 
schema) to Wesnoth. 
</p><p><i>There are 2 submitted student proposals for this idea</i>
</p>
<a name="Sytyi_-_WML_Validator" id="Sytyi_-_WML_Validator"></a><h4> <span class="mw-headline">Sytyi - WML Validator</span></h4>
<p>The main idea of WML Validator is grammar based validator on C++ generating <b>USER-FRIENDLY</b> error messages in gcc style.
<br>See <a href="http://wiki.wesnoth.org/GSoC_2011_Sytyi" title="GSoC 2011 Sytyi">GSoC 2011 Sytyi</a> for more information.<br><br>
</p>
<a name="GrigoryJ_-_WML_schema" id="GrigoryJ_-_WML_schema"></a><h4> <span class="mw-headline">GrigoryJ - WML schema</span></h4>
<p>The general idea is to specify the WML schema as a WML document 
itself, and to validate a preprocessed, well-formed piece of WML against
 it. The schema will specify the structure of the document (i.e., the 
subtags/attributes that tags may contain, the order of tags, etc.) and 
types for the attributes (either basic types or derived types).
<br>See <a href="http://wiki.wesnoth.org/SummerofCode_GrigoryJ" title="SummerofCode GrigoryJ">SummerofCode GrigoryJ</a> for more information.<br><br>
<br>
</p>
<a name="Create_a_simple_content_manager_frontend_for_non-technical_users" id="Create_a_simple_content_manager_frontend_for_non-technical_users"></a><h2> <span class="mw-headline">Create a simple content manager frontend for non-technical users</span></h2>
<p>More info at <a href="http://wiki.wesnoth.org/SoC_Ideas_Simple_Content_Manager" title="SoC Ideas Simple Content Manager">SoC_Ideas_Simple_Content_Manager</a>
</p><p>Wesnoth has all sorts of contributors that are not coders (translators, graphists, multiplayer developers, musicians, etc)
</p><p>A large part of these users don't know how to use content 
managers (git, svn, etc...) and are not interested in learning. Wesnoth 
has been looking for a simple frontend to the most common content 
managers for those developers but none of these are simple enough for 
our use case. 
</p><p><i>There is 1 submitted student proposal for this idea</i>
</p>
<a name="Disruption_-_Simple_Content_Manager" id="Disruption_-_Simple_Content_Manager"></a><h4> <span class="mw-headline">Disruption - Simple Content Manager</span></h4>
<p>Brief:
I want to write a Java Simple Content Manager. The most important thing 
about it would always be simplicity in terms of not requiring technical 
knowledge at all, so potential contributors in areas like graphics, 
music, or other artwork could join the community and help with ease.
</p><p><br>
The idea is developing the project in a Java environment, as java is 
supported in most OS(Apart from Mac, Unix and Windows, it can also be 
used in most mobile platforms and systems).
Another reason for choosing java is that is very easy to design a cute 
GUI that don't scares the user away, and also the GUI adapts its âlook 
and feelâ to the system it is running in, so the user sees it like 
another of his programs, rather than an external, strange tool.
In terms of programming, as described before, the idea is taking a MVC 
approach, implementing first the view, and preparing then a modular 
controller for all the functionality needed.
As Java has JUnit tests and a powerful debugger, it's easy to track down
 bugs and fix them, as well and check that every part works correctly 
and incrementally, so you can be sure that a new functionality doesn't 
break an older one(As you can add tests while you develop, so you always
 execute 100% of the tests).
<br>See <a href="http://wiki.wesnoth.org/Disruption_Simple_Content_Manager" title="Disruption Simple Content Manager">Disruption Simple Content Manager</a> for more information.<br><br>
<br>
</p>
<a name="Allow_wesnoth_to_support_spritesheets" id="Allow_wesnoth_to_support_spritesheets"></a><h2> <span class="mw-headline">Allow wesnoth to support spritesheets</span></h2>
<p>Page for the idea: <a href="http://wiki.wesnoth.org/SoC_Ideas_Sprite_Sheets2011" title="SoC Ideas Sprite Sheets2011">SoC_Ideas_Sprite_Sheets2011</a>
</p><p>Currently, all the Wesnoth unit animations are based on thousands of small png
images, each image representing the unit in a single pose. For terrains the
situation is the same, it has a base image with a lot of transitions to other
terrains, which are now stored as seperate images.
</p><p>In a sprite sheet approach, each unit is represented by a single, huge, image
where all the unit images are put on a mosaÃ¯c pattern and the game knows where
to look for a given image.
</p><p>The advantage of having a large image with all positions is that it's more
efficient in memory. Also one large file is more effecient on the harddisk and
faster to load than a lot of smaller files. So the change to spritesheets will
have a lot of advantages.
</p><p>Regarding the implementation the student is free to come up with his/her own
solution and discuss that with the developers during the application period.
</p><p><i>There are 6 submitted student proposals for this idea</i>
</p>
<a name="Karol_Kozub_-_Spritesheets" id="Karol_Kozub_-_Spritesheets"></a><h4> <span class="mw-headline">Karol Kozub - <a href="http://wiki.wesnoth.org/SoC_Ideas_Sprite_Sheets2011" title="SoC Ideas Sprite Sheets2011">Spritesheets</a></span></h4>
<p>I would like to implement a tool that would pack images into 
spritesheets. The tool would use an optimization algorithm to propose an
 arrangement to the artist, who then would be able to modify it using a 
GUI. It would also support adding/removing sprites to/from existing 
spritesheets. I would also implement an image loader that would load the
 images from spritesheets using configuration files generated by the 
tool.
<br>See <a href="http://wiki.wesnoth.org/SoC2011_Automagic" title="SoC2011 Automagic">SoC2011 Automagic</a> for more information.<br><br>
</p>
<a name="Jacob_Regan_-_Consolidation_of_.PNG.27s_into_Sprite_Sheets" id="Jacob_Regan_-_Consolidation_of_.PNG.27s_into_Sprite_Sheets"></a><h4> <span class="mw-headline">Jacob Regan - Consolidation of .PNG's into Sprite Sheets</span></h4>
<p>The goal is to create a logical system for ordering individual frames
 of animation into a single image file.  The implementation of this 
system has two major parts.  First, the code to implement those single 
image files needs to be developed and tested.  Secondly an easy way to 
manipulate, modify, and add new sprite sheets needs to be implemented.  
To this end, I propose that each sprite sheet be arranged in a grid, 
with the rows each representing a different animation action (attack, 
idle, ect.) and each row representing a frame of the animation.
<br>See <a href="http://wiki.wesnoth.org/SoC2011_Zippydaspinhead" title="SoC2011 Zippydaspinhead">SoC2011 Zippydaspinhead</a> for more information.<br><br>
</p>
<a name="Arthur_Wulf_-_Spritesheets" id="Arthur_Wulf_-_Spritesheets"></a><h4> <span class="mw-headline">Arthur Wulf - Spritesheets</span></h4>
<p><b>I wish to reorganize the sprite system for units &amp; terrain:</b><br>
Creating an artist friendly workflow &amp; implementing extensile spritesheet functionality.<br>
<b>Doing this I'm planning to accomplish two goals:</b><br>
</p>
<ol>
<li>Allow artists to make tweaks in animation more quickly and easily.</li>
<li>Improve installation time and loading time of the game. It could also be of benefit to perforamance on ports to mobile devices.</li>
</ol>
<p>It will simplify the process of adding new content by allowing 
artists to work with one single large image rather than many seperate 
files.<br>
After receiving artists feedback we may also want to consider adding an 
in-game option to refresh sprites w/o exiting the game and restarting.<br>
(In order to test tweaks more quickly)<br><br>
</p><p>In addition to working on the spritesheet system I will complete 
the transition to this new system by creating a tool that merges frames 
in seperate .png files into an organized spritesheet and creates a new 
.cfg files that is adjusted to use a spritesheet.<br>
This will have the additional benefit of leaving the choice between the new and existing workflow in the hands of the artist.
<br>See <a href="http://wiki.wesnoth.org/SoC_Ideas_Sprite_Sheets2011_ArthurWulf" title="SoC Ideas Sprite Sheets2011 ArthurWulf">SoC Ideas Sprite Sheets2011 ArthurWulf</a> for more information.<br><br>
</p>
<a name="Tom_Hadley_-_Sprite_Sheet_Creation.2FImplementation" id="Tom_Hadley_-_Sprite_Sheet_Creation.2FImplementation"></a><h4> <span class="mw-headline"> Tom Hadley - Sprite Sheet Creation/Implementation </span></h4>
<p>The first step is to create the sprite sheets by taking the many 
small sprites that we already have and piecing them together to form a 
sheet. This sheet must be organized in such a way that the each 
individual sprite is still easily accessible.
</p><p>I think the best way to go about accessing the sprites is to have
 them in a certain location in the sheet. This sheet could then be 
divided into different image-esque objects using a bi-dimensional pixel 
struct array, while certain sprites are given certain x-y locations.
<br>See <a href="http://wiki.wesnoth.org/SoC_Ideas_Sprite_Sheets2011_hadleyt" title="SoC Ideas Sprite Sheets2011 hadleyt">SoC Ideas Sprite Sheets2011 hadleyt</a> for more information.<br><br>
</p>
<a name="Nicolas_P.C3.A9pin-Perreault_-_Spritesheet_Implementation" id="Nicolas_P.C3.A9pin-Perreault_-_Spritesheet_Implementation"></a><h4> <span class="mw-headline">Nicolas PÃ©pin-Perreault - Spritesheet Implementation</span></h4>
<p>The idea is to implement support for a flexible sprite sheet 
mechanism within the Wesnoth code base; flexible implies the capacity to
 deal with variable-sized frames within the same sheet. The project 
would focus on implementing a 2D array interface to individual sprite 
sheets, allowing easy and efficient access to single sprites within the 
sheet with minimal change to the rest of the code base. Other goals 
would be the creation of a command-line tool to batch convert series of 
PNG images into a sprite sheet, and a GUI tool to allow artists to 
easily tweak the visual aspects of unit and terrain sheets.
<br>See <a href="http://wiki.wesnoth.org/SoC_Ideas_Sprite_Sheets2011_Npepinpe" title="SoC Ideas Sprite Sheets2011 Npepinpe">SoC Ideas Sprite Sheets2011 Npepinpe</a> for more information.<br><br>
</p>
<a name="Sajal-_Implementation_of_images_using_spritesheets" id="Sajal-_Implementation_of_images_using_spritesheets"></a><h4> <span class="mw-headline">Sajal- Implementation of images using spritesheets</span></h4>
<p>The idea is to implement a spritesheet for loading images instead of 
individual png images.Basically, the idea is to design two seperate 
spritesheet - one for the characters and the other for objects in the 
environment.It would be flexible and have multiple-sized images.
</p><p>The 2 spritesheets would be a large png image. If possible,a tool
 to merge images into a spritesheet would be created, so as to skip the 
"copy-paste" process . This will also enable other users to add the 
characters of their choice- which they could design via photoshop/other 
image-editing programs.
<br>See <a href="http://wiki.wesnoth.org/SoC_Ideas_Sprite_Sheets2011_Sajal" title="SoC Ideas Sprite Sheets2011 Sajal">SoC Ideas Sprite Sheets2011 Sajal</a> for more information.<br><br>
<br>
</p>
<a name="Improve_Wesnoth.27s_Whiteboard" id="Improve_Wesnoth.27s_Whiteboard"></a><h2> <span class="mw-headline">Improve Wesnoth's Whiteboard</span></h2>
<p>More info at <a href="http://wiki.wesnoth.org/SoC_Ideas_Whiteboard_2011" title="SoC Ideas Whiteboard 2011">SoC_Ideas_Whiteboard_2011</a>
</p><p>A whiteboard planning UI was implemented last year for GSoC
</p><p>This years project would be to continue the work by polishing 
what was done last year and making it network aware so allies can see 
each other's plan 
</p><p><i>There is 1 submitted student proposal for this idea</i>
</p>
<a name="Tommy_Schmitz_-_Whiteboard_Improvements" id="Tommy_Schmitz_-_Whiteboard_Improvements"></a><h4> <span class="mw-headline">Tommy Schmitz - Whiteboard Improvements</span></h4>
<p>The Wesnoth whiteboard system is the mechanism by which players can 
plan their strategies in-game. The whiteboard is currently unfinished 
and requires both debugging and additional features. The proposed 
project will address these, with the focus on allowing allied players to
 view each others' plans over the network.
<br>See <a href="http://wiki.wesnoth.org/User:Tschmitz" title="User:Tschmitz">Tschmitz</a> for more information.<br><br>
<br>
</p>
<a name="Make_your_own_ideas" id="Make_your_own_ideas"></a><h2> <span class="mw-headline">Make your own ideas</span></h2>
<p>Page for the idea: <a href="http://wiki.wesnoth.org/SoC_Ideas_Your_Own_Ideas2011" title="SoC Ideas Your Own Ideas2011">SoC_Ideas_Your_Own_Ideas2011</a>
</p><p>If you have your own idea the best thing is to join IRC 
wesnoth-dev at irc.freenode.net and discuss the idea with the developers
 there. If the developers think your idea is interesting and like the 
feature you can start to turn it into a full proposal. Once done discuss
 it again on IRC so the developers can accept your idea. 
</p><p><br>
<i>There are 4 submitted student proposals for this idea</i>
</p>
<a name="Mark_Goodenough_-_Improvements_to_the_Lua_AI" id="Mark_Goodenough_-_Improvements_to_the_Lua_AI"></a><h4> <span class="mw-headline">Mark Goodenough - Improvements to the Lua AI</span></h4>
<p>I propose to first extend the capabilities of the current system for 
using Lua scripts to dictate AI behaviour, which is the main part of 
what the Wesnoth team have said they want from this project. After that I
 intend to program some specific behaviours that scenario designers 
might find useful, like 'focus on this unit' for situations where the 
players looses if a unit dies. Finally I intend to try to improve on the
 current Wesnoth AI creating an AI that performs better against human 
opponents. This last goal is the hardest part, as I've never written an 
AI before although our course at uni does cover the theory side of 
possible AI implemenations, and I may not succeed.
<br>See <a href="http://wiki.wesnoth.org/User:MGoods" title="User:MGoods">MGoods</a> for more information.<br><br>
</p>
<a name="Michael_Babich_-_Improving_Lua_Add-ons.27_Abilities_in_Interfaces" id="Michael_Babich_-_Improving_Lua_Add-ons.27_Abilities_in_Interfaces"></a><h4> <span class="mw-headline">Michael Babich - Improving Lua Add-ons' Abilities in Interfaces</span></h4>
<p>This main goal of this proposal is to improve the capability of the 
Lua scripting language when used for creating add-ons, specifically with
 the various interfaces visible to the users while playing the game. 
This project will focus on providing simple, but powerful syntax for a 
broad range of features that enable add-on creators to have improved and
 easier access to features that mostly already exist within the game 
engine so that they are free to creatively provide more innovative 
content. The purpose of this project is to act as a middleman between 
the game engine and the add-on creators using the Lua scripting language
 so that simple and powerful add-on creation can help revolutionize 
future MP, just as [set_menu_item] and [option] allowed for a great 
evolution in the quality of add-ons since 1.3. This interface framework 
needs to be as broad as possible in the time given and the scope allowed
 so that creative add-on authors themselves can stretch Wesnoth content 
far beyond its traditional style, but it also must provide a simplified 
Lua helper library so that everyone can use it without necessarily 
having to delve deeply into the complexity that exists in the 
currently-existing GUI.
<br>See <a href="http://wiki.wesnoth.org/SoC2011_Student_Page_Aethaeryn" title="SoC2011 Student Page Aethaeryn">SoC2011 Student Page Aethaeryn</a> for more information.<br><br>
</p>
<a name="Kornel_Kisielewicz_-_pure_Lua-based_scenario_definition" id="Kornel_Kisielewicz_-_pure_Lua-based_scenario_definition"></a><h4> <span class="mw-headline">Kornel Kisielewicz - pure Lua-based scenario definition</span></h4>
<p>The proposal suggests a schema and solution for defining Wesnoth 
scenarios in pure Lua without the usage of WML. Advantages of such a 
solution and the additional benefits that will be delivered along it 
will be described in detail soon. 
<br>See <a href="http://wiki.wesnoth.org/SoC2011_Student_Page_Epyon" title="SoC2011 Student Page Epyon">SoC2011 Student Page Epyon</a> for more information.<br><br>
</p>
<a name="SteveGSoC_-_Project_description" id="SteveGSoC_-_Project_description"></a><h4> <span class="mw-headline">SteveGSoC - Project description </span></h4>
<p>TODO: Write a small (1-4 sentences) description of your proposal here.
<br>See <a href="http://wiki.wesnoth.org/SoC2011_Student_Page_SteveGSoC" title="SoC2011 Student Page SteveGSoC">SoC2011 Student Page SteveGSoC</a> for more information.<br><br><br>
</p>
<a name="Student_proposals_not_submitted_to_google" id="Student_proposals_not_submitted_to_google"></a><h1> <span class="mw-headline">Student proposals not submitted to google</span></h1>
<p><i>There are 13 student proposals which were not submitted to google</i><br><a href="http://wiki.wesnoth.org/User:Champ/Questionaire" title="User:Champ/Questionaire">Champ/Questionaire</a><br>
MGoods,MGoods|RangerM
<a href="http://wiki.wesnoth.org/User:MGoods" title="User:MGoods">MGoods</a><br>
Qbunia
<a href="http://wiki.wesnoth.org/User:Qboo" title="User:Qboo">Qboo</a><br>
automagic
<a href="http://wiki.wesnoth.org/SoC2011_Automagic" title="SoC2011 Automagic">SoC2011 Automagic</a><br>
FishbaitHarry
<a href="http://wiki.wesnoth.org/SoC2011_FishbaitHarry" title="SoC2011 FishbaitHarry">SoC2011 FishbaitHarry</a><br>
_sagi,sagi
<a href="http://wiki.wesnoth.org/SoC2011_Sajal_spritesheet_idea_page" title="SoC2011 Sajal spritesheet idea page">SoC2011 Sajal spritesheet idea page</a><br><a href="http://wiki.wesnoth.org/SoC2011_Student_Page_Aethaeryn" title="SoC2011 Student Page Aethaeryn">SoC2011 Student Page Aethaeryn</a><br>
epyon
<a href="http://wiki.wesnoth.org/SoC2011_Student_Page_Epyon" title="SoC2011 Student Page Epyon">SoC2011 Student Page Epyon</a><br>
SteveGSoC
<a href="http://wiki.wesnoth.org/SoC2011_Student_Page_SteveGSoC" title="SoC2011 Student Page SteveGSoC">SoC2011 Student Page SteveGSoC</a><br>
"Xenmen"
<a href="http://wiki.wesnoth.org/SoC2011_Xenmen" title="SoC2011 Xenmen">SoC2011 Xenmen</a><br>
Zippydaspinhead
<a href="http://wiki.wesnoth.org/SoC2011_Zippydaspinhead" title="SoC2011 Zippydaspinhead">SoC2011 Zippydaspinhead</a><br>
elbowroom
<a href="http://wiki.wesnoth.org/SoC_Ideas_Sprite_Sheets2011_ArthurWulf" title="SoC Ideas Sprite Sheets2011 ArthurWulf">SoC Ideas Sprite Sheets2011 ArthurWulf</a><br>
npepinpe
<a href="http://wiki.wesnoth.org/SoC_Ideas_Sprite_Sheets2011_Npepinpe" title="SoC Ideas Sprite Sheets2011 Npepinpe">SoC Ideas Sprite Sheets2011 Npepinpe</a><br>
</p>
<!-- 
NewPP limit report
Preprocessor node count: 40/1000000
Post-expand include size: 484/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->
<div class="printfooter">
Retrieved from "<a href="http://wiki.wesnoth.org/SummerOfCodeIdeas">http://wiki.wesnoth.org/SummerOfCodeIdeas</a>"</div>
    <div id="catlinks"><div id="catlinks" class="catlinks"><div id="mw-normal-catlinks"><a href="http://wiki.wesnoth.org/Special:Categories" title="Special:Categories">Category</a>: <span dir="ltr"><a href="http://wiki.wesnoth.org/Category:Summer_of_Code_2011" title="Category:Summer of Code 2011">Summer of Code 2011</a></span></div></div></div>    <!-- end wikipage -->

    <div id="lastmod"> This page was last modified on 6 April 2011, at 10:05.</div>    <div class="visualClear"></div>
  </div>
</div> <!-- end content -->

<div id="footer">

  
<div class="visualClear"></div>

  <div class="portlet" id="p-personal">
      <ul>
              <li id="pt-login">
        <a href="http://wiki.wesnoth.org/index.php?title=Special:UserLogin&amp;returnto=SummerOfCodeIdeas">Log in / create account</a>
        </li>
            </ul>
  </div>

  <div class="portlet" id="p-fixed">
    <ul>
      <li><a href="http://www.wesnoth.org/">Home</a></li>
      <li><a href="http://wiki.wesnoth.org/wiki/Special:Recentchanges">Recent changes</a></li>
      <li><a href="http://wiki.wesnoth.org/wiki/Special:Search">Search</a></li>
    </ul>
  </div>

<div class="visualClear"></div>

  <div id="note">
    <p><a href="http://www.wesnoth.org/wiki/Wesnoth:Copyrights">Copyright</a> Â© 2003-2011 The Battle for Wesnoth</p>
    <p>Powered by <a href="http://www.mediawiki.org/">MediaWiki</a></p>
  </div>

</div> <!-- end footer -->

</div> <!-- end main -->

</div> <!-- end global -->

<!-- Served in 0.538 secs. -->
<script src="The%20Battle%20for%20Wesnoth_files/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-1872754-3";
urchinTracker();
</script>

 

</body></html>